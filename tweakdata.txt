Main tweakdefs	!bset tweakdefs2 
T4 Defences Test	!bset tweakdefs3 
Mini Bosses	!bset tweakdefs4 LS1NaW5pIEJvc3NlcyB2MmUKLS0gQXV0aG9yczogUkNvcmUKLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvCmxvY2FsIHVuaXREZWZzLCB0YWJsZU1lcmdlLCB0YWJsZUNvcHksIHJhcHRvcl9tYXRyaWFyY2hfYmFzaWMsIGN1c3RvbWZ1c2lvbmV4cGxvLCBzcHJpbmcgPSBVbml0RGVmcyBvciB7fSwgdGFibGUubWVyZ2UsIHRhYmxlLmNvcHksICdyYXB0b3JfbWF0cmlhcmNoX2Jhc2ljJywgJ2N1c3RvbWZ1c2lvbmV4cGxvJywgU3ByaW5nIGxvY2FsIG5iUWhwTXVsdCwgbmJIcE11bHQgPSAxLjMsIDEuMyBuYkhwTXVsdCA9IHVuaXREZWZzW3JhcHRvcl9tYXRyaWFyY2hfYmFzaWNdLmhlYWx0aCAvIDYwMDAwIG5iUWhwTXVsdCA9IHVuaXREZWZzWydyYXB0b3JfcXVlZW5fZXBpYyddLmhlYWx0aCAvIDEyNTAwMDAgbG9jYWwgcGxheWVyQ291bnRTY2FsZSA9IDEgaWYgc3ByaW5nLlV0aWxpdGllcy5HYW1ldHlwZS5Jc1JhcHRvcnMoKSB0aGVuIHBsYXllckNvdW50U2NhbGUgPSAoI3NwcmluZy5HZXRUZWFtTGlzdCgpIC0gMikvMTIgZW5kIGxvY2FsIHNwYXduQ291bnRNdWx0ID0gc3ByaW5nLkdldE1vZE9wdGlvbnMoKS5yYXB0b3Jfc3Bhd25jb3VudG11bHQgb3IgMyBsb2NhbCB0b3RhbFNwYXduU2NhbGUgPSBwbGF5ZXJDb3VudFNjYWxlICogKHNwYXduQ291bnRNdWx0IC8gMykgbG9jYWwgZnVuY3Rpb24gc2NhbGVkTWF4KGJhc2UpIHJldHVybiBtYXRoLm1heCgxLCBtYXRoLmNlaWwoYmFzZSAqIHRvdGFsU3Bhd25TY2FsZSkpIGVuZCBsb2NhbCBtcUFuZ2VyID0gezcwLCA4NSwgOTAsIDEwNSwgMTEwLCAxMjV9IGxvY2FsIG1xVGltZU11bHQgPSBtYXRoLm1heCgxLCBzcHJpbmcuR2V0TW9kT3B0aW9ucygpLnJhcHRvcl9xdWVlbnRpbWVtdWx0IG9yIDEuMykgbG9jYWwgbXFTdGFydCwgbXFMYXN0ID0gbXFBbmdlclsxXSwgbXFBbmdlclsjbXFBbmdlcl0gbG9jYWwgbXFUYXJnZXRMYXN0ID0gbXFUaW1lTXVsdCAqIG1xQW5nZXJbI21xQW5nZXJdLzEuMyBsb2NhbCBtcUZhY3RvciA9IChtcVRhcmdldExhc3QgLSBtcVN0YXJ0KSAvIChtcUxhc3QgLSBtcVN0YXJ0KSBmb3IgaSA9IDIsICNtcUFuZ2VyIGRvIG1xQW5nZXJbaV0gPSBtYXRoLmZsb29yKG1xU3RhcnQgKyAobXFBbmdlcltpXSAtIG1xU3RhcnQpICogbXFGYWN0b3IpIGVuZCBsb2NhbCBtcU51bVF1ZWVucyA9IHNwcmluZy5HZXRNb2RPcHRpb25zKCkucmFwdG9yX3F1ZWVuX2NvdW50IG9yIDEgbG9jYWwgbXFEb29tQW5nZXJTY2FsZSA9IDEgaWYgbmJRaHBNdWx0ID4gMS4zIHRoZW4gbXFEb29tQW5nZXJTY2FsZSA9IG1hdGgubWluKDEwLCBuYlFocE11bHQgLyAxLjMgKiAwLjkpIGVuZCBsb2NhbCBtcURvb21BbmdlciA9IG1hdGguY2VpbChtcURvb21BbmdlclNjYWxlICogKDEwICogKDEuMDYgXiBtYXRoLm1heCgwLCBtcU51bVF1ZWVucyAtIDgpKSkpIGxvY2FsIG1xQW5nZXJCb3NzID0gbXFUaW1lTXVsdCAqIDEwMCArIG1xRG9vbUFuZ2VyIGxvY2FsIG1heERvb21icmluZ2VycyA9IG1hdGgubWF4KDMsIHNjYWxlZE1heChtYXRoLmZsb29yKCgyMSAqIG1xTnVtUXVlZW5zICsgMzYpIC8gMTkpKSkgbG9jYWwgZnVuY3Rpb24gbmV3VW5pdChvbGQsIG5ldywgZGF0YSkgaWYgdW5pdERlZnNbb2xkXSBhbmQgbm90IHVuaXREZWZzW25ld10gdGhlbiB1bml0RGVmc1tuZXddID0gdGFibGVNZXJnZSh1bml0RGVmc1tvbGRdLCBkYXRhIG9yIHt9KSBlbmQgZW5kIGxvY2FsIHJhcHRvcl9tYXRyaWFyY2hfYmFzaWNfaGVhbHRoID0gdW5pdERlZnNbcmFwdG9yX21hdHJpYXJjaF9iYXNpY10uaGVhbHRoIG5ld1VuaXQoICdyYXB0b3JfcXVlZW5fdmVyeWVhc3knLCAncmFwdG9yX21pbmlxX2EnLCB7IG5hbWUgPSAnUXVlZW5saW5nIFByaW1hJywgaWNvbnR5cGUgPSAncmFwdG9yX3F1ZWVuX3ZlcnllYXN5JywgaGVhbHRoID0gcmFwdG9yX21hdHJpYXJjaF9iYXNpY19oZWFsdGggKiA1LCBjdXN0b21wYXJhbXMgPSB7IGkxOG5fZW5faHVtYW5uYW1lID0gJ1F1ZWVubGluZyBQcmltYScsIGkxOG5fZW5fdG9vbHRpcCA9ICdNYWplc3RpYyBhbmQgYm9sZCwgcnVsZXIgb2YgdGhlIGh1bnQuJyB9IH0gKSBuZXdVbml0KCAncmFwdG9yX3F1ZWVuX2Vhc3knLCAncmFwdG9yX21pbmlxX2InLCB7IG5hbWUgPSAnUXVlZW5saW5nIFNlY3VuZGEnLCBpY29udHlwZSA9ICdyYXB0b3JfcXVlZW5fZWFzeScsIGhlYWx0aCA9IHJhcHRvcl9tYXRyaWFyY2hfYmFzaWNfaGVhbHRoICogNiwgY3VzdG9tcGFyYW1zID0geyBpMThuX2VuX2h1bWFubmFtZSA9ICdRdWVlbmxpbmcgU2VjdW5kYScsIGkxOG5fZW5fdG9vbHRpcCA9ICdTd2lmdCBhbmQgc2hhcnAsIGEgbm9ibGUgYW1vbmcgcmFwdG9ycy4nIH0gfSApIG5ld1VuaXQoICdyYXB0b3JfcXVlZW5fbm9ybWFsJywgJ3JhcHRvcl9taW5pcV9jJywgeyBuYW1lID0gJ1F1ZWVubGluZyBUZXJ0aWEnLCBpY29udHlwZSA9ICdyYXB0b3JfcXVlZW5fbm9ybWFsJywgaGVhbHRoID0gcmFwdG9yX21hdHJpYXJjaF9iYXNpY19oZWFsdGggKiA3LCBjdXN0b21wYXJhbXMgPSB7IGkxOG5fZW5faHVtYW5uYW1lID0gJ1F1ZWVubGluZyBUZXJ0aWEnLCBpMThuX2VuX3Rvb2x0aXAgPSAnUmVmaW5lZCB0YXN0ZXMuIExpa2VzIGhlciBwcmV5IHJhcmUuJyB9IH0gKSB1bml0RGVmcy5yYXB0b3JfbWluaXFfYi53ZWFwb25kZWZzLmFjaWRnb28gPSB0YWJsZUNvcHkodW5pdERlZnNbJ3JhcHRvcl9tYXRyaWFyY2hfYWNpZCddLndlYXBvbmRlZnMuYWNpZGdvbykgdW5pdERlZnMucmFwdG9yX21pbmlxX2Mud2VhcG9uZGVmcy5lbXBnb28gPSB0YWJsZUNvcHkodW5pdERlZnNbJ3JhcHRvcl9tYXRyaWFyY2hfZWxlY3RyaWMnXS53ZWFwb25kZWZzLmdvbykgZm9yIF8sIGwgaW4gaXBhaXJzIHsgeyAncmFwdG9yX21hdHJpYXJjaF9iYXNpYycsICdyYXB0b3JfbWFtYV9iYScsICdNYXRyb25hJywgJ0NsYXdzIGNoYXJnZWQgd2l0aCB2ZW5nZWFuY2UuJyB9LCB7ICdyYXB0b3JfbWF0cmlhcmNoX2ZpcmUnLCAncmFwdG9yX21hbWFfZmknLCAnUHlybyBNYXRyb25hJywgJ0EgZmlyZXN0b3JtIG9mIG1hdGVybmFsIHdyYXRoLicgfSwgeyAncmFwdG9yX21hdHJpYXJjaF9lbGVjdHJpYycsICdyYXB0b3JfbWFtYV9lbCcsICdQYXJhbHl6aW5nIE1hdHJvbmEnLCAnQ3JhY2tsaW5nIHdpdGggcmFnZSwgcmVhZHkgdG8gc3RyaWtlLicgfSwgeyAncmFwdG9yX21hdHJpYXJjaF9hY2lkJywgJ3JhcHRvcl9tYW1hX2FjJywgJ0FjaWQgTWF0cm9uYScsICdBY2lkLWZ1ZWxlZCwgbWVsdGluZyBldmVyeXRoaW5nIGluIHNpZ2h0LicgfSB9IGRvIG5ld1VuaXQoIGxbMV0sIGxbMl0sIHsgbmFtZSA9IGxbM10sIGljb250eXBlID0gbFsxXSwgaGVhbHRoID0gcmFwdG9yX21hdHJpYXJjaF9iYXNpY19oZWFsdGggKiAxLjUsIGN1c3RvbXBhcmFtcyA9IHsgaTE4bl9lbl9odW1hbm5hbWUgPSBsWzNdLCBpMThuX2VuX3Rvb2x0aXAgPSBsWzRdIH0gfSApIGVuZCBuZXdVbml0KCAnY3JpdHRlcl9wZW5ndWlua2luZycsICdyYXB0b3JfY29uc29ydCcsIHsgbmFtZSA9ICdSYXB0b3IgQ29uc29ydCcsIGljb250eXBlID0gJ2NvcmtvcmcnLCBoZWFsdGggPSByYXB0b3JfbWF0cmlhcmNoX2Jhc2ljX2hlYWx0aCAqIDQsIG1hc3MgPSAxMDAwMDAsIG5vY2hhc2VjYXRlZ29yeSA9ICJNT0JJTEUgVlRPTCBPQkpFQ1QiLCBzb25hcnN0ZWFsdGggPSBmYWxzZSwgc3RlYWx0aCA9IGZhbHNlLCBzcGVlZCA9IDY3LjUsIGN1c3RvbXBhcmFtcyA9IHsgaTE4bl9lbl9odW1hbm5hbWUgPSAnUmFwdG9yIENvbnNvcnQnLCBpMThuX2VuX3Rvb2x0aXAgPSAnU25lYWt5IHBvd2VyZnVsIGxpdHRsZSB0ZXJyb3IuJyB9IH0gKSB1bml0RGVmcy5yYXB0b3JfY29uc29ydC53ZWFwb25kZWZzLmdvbyA9IHRhYmxlQ29weSh1bml0RGVmc1sncmFwdG9yX3F1ZWVuX2VwaWMnXS53ZWFwb25kZWZzLmdvbykgbmV3VW5pdCggJ3JhcHRvcl9jb25zb3J0JywgJ3JhcHRvcl9kb29tYnJpbmdlcicsIHsgbmFtZSA9ICdEb29tYnJpbmdlcicsIGljb250eXBlID0gJ2FybWFmdXN0MycsIGhlYWx0aCA9IHJhcHRvcl9tYXRyaWFyY2hfYmFzaWNfaGVhbHRoICogMTIsIHNwZWVkID0gNTAsIGN1c3RvbXBhcmFtcyA9IHsgaTE4bl9lbl9odW1hbm5hbWUgPSAnRG9vbWJyaW5nZXInLCBpMThuX2VuX3Rvb2x0aXAgPSAnWW91ciB0aW1lIGlzIHVwLiBUaGUgUXVlZW5zIGNhbGxlZCBmb3IgYmFja3VwLicgfSB9ICkgbG9jYWwgZnVuY3Rpb24gcmFwdG9yU3F1YWQocCwgcSwgZSwgciwgcywgdCkgcmV0dXJuIHsgcmFwdG9yY3VzdG9tc3F1YWQgPSB0cnVlLCByYXB0b3JzcXVhZHVuaXRzYW1vdW50ID0gcyBvciAxLCByYXB0b3JzcXVhZG1pbmFuZ2VyID0gcCwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IHEsIHJhcHRvcnNxdWFkd2VpZ2h0ID0gdCBvciA1LCByYXB0b3JzcXVhZHJhcml0eSA9IHIgb3IgJ2Jhc2ljJywgcmFwdG9yc3F1YWRiZWhhdmlvciA9IGUsIHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZSA9IDUwMCwgcmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZSA9IDAuNzUgfSBlbmQgbG9jYWwgbWluaVF1ZWVuQ29tbW9uID0geyBzZWxmZGVzdHJ1Y3RhcyA9IGN1c3RvbWZ1c2lvbmV4cGxvLCBleHBsb2RlYXMgPSBjdXN0b21mdXNpb25leHBsbywgd2VhcG9uZGVmcyA9IHsgeWVsbG93X21pc3NpbGUgPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDEsIHZ0b2wgPSAxMDAwIH0gfSB9IH0gZm9yIGYsIHUgaW4gcGFpcnMgeyByYXB0b3JfbWluaXFfYSA9IHRhYmxlTWVyZ2UobWluaVF1ZWVuQ29tbW9uLCB7IG1heHRoaXN1bml0ID0gc2NhbGVkTWF4KDIpLCBjdXN0b21wYXJhbXMgPSByYXB0b3JTcXVhZChtcUFuZ2VyWzFdLCBtcUFuZ2VyWzJdLCAnYmVyc2VyaycpLCB3ZWFwb25kZWZzID0geyBnb28gPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDc1MCB9IH0sIG1lbGVlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA0MDAwIH0gfSwgfSB9KSwgcmFwdG9yX21pbmlxX2IgPSB0YWJsZU1lcmdlKG1pbmlRdWVlbkNvbW1vbiwgeyBtYXh0aGlzdW5pdCA9IHNjYWxlZE1heCgzKSwgY3VzdG9tcGFyYW1zID0gcmFwdG9yU3F1YWQobXFBbmdlclszXSwgbXFBbmdlcls0XSwgJ2JlcnNlcmsnKSwgd2VhcG9uZGVmcyA9IHsgYWNpZGdvbyA9IHsgYnVyc3QgPSA4LCByZWxvYWR0aW1lID0gMTAsIHNwcmF5YW5nbGUgPSA0MDk2LCBkYW1hZ2UgPSB7IGRlZmF1bHQgPSAxNTAwLCBzaGllbGRzID0gMTUwMCB9IH0sIG1lbGVlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA1MDAwIH0gfSwgfSwgd2VhcG9ucyA9IHsgWzFdID0geyBkZWYgPSAiTUVMRUUiLCBtYWluZGlyID0gIjAgMCAxIiwgbWF4YW5nbGVkaWYgPSAxNTUsIH0sIFsyXSA9IHsgb25seXRhcmdldGNhdGVnb3J5ID0gIlZUT0wiLCBkZWYgPSAieWVsbG93X21pc3NpbGUiLCB9LCBbM10gPSB7IG9ubHl0YXJnZXRjYXRlZ29yeSA9ICJWVE9MIiwgZGVmID0gInllbGxvd19taXNzaWxlIiwgfSwgWzRdID0geyBvbmx5dGFyZ2V0Y2F0ZWdvcnkgPSAiVlRPTCIsIGRlZiA9ICJ5ZWxsb3dfbWlzc2lsZSIsIH0sIFs1XSA9IHsgZGVmID0gImFjaWRnb28iLCBtYWluZGlyID0gIjAgMCAxIiwgbWF4YW5nbGVkaWYgPSAxODAsIH0sIH0sIH0pLCByYXB0b3JfbWluaXFfYyA9IHRhYmxlTWVyZ2UobWluaVF1ZWVuQ29tbW9uLCB7IG1heHRoaXN1bml0ID0gc2NhbGVkTWF4KDQpLCBjdXN0b21wYXJhbXMgPSByYXB0b3JTcXVhZChtcUFuZ2VyWzVdLCBtcUFuZ2VyWzZdLCAnYmVyc2VyaycpLCB3ZWFwb25kZWZzID0geyBlbXBnb28gPSB7IGJ1cnN0ID0gMTAsIHJlbG9hZHRpbWUgPSAxMCwgc3ByYXlhbmdsZSA9IDQwOTYsIGRhbWFnZSA9IHsgZGVmYXVsdCA9IDIwMDAsIHNoaWVsZHMgPSAyMDAwIH0gfSwgbWVsZWUgPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDYwMDAgfSB9LCB9LCB3ZWFwb25zID0geyBbMV0gPSB7IGRlZiA9ICJNRUxFRSIsIG1haW5kaXIgPSAiMCAwIDEiLCBtYXhhbmdsZWRpZiA9IDE1NSwgfSwgWzJdID0geyBvbmx5dGFyZ2V0Y2F0ZWdvcnkgPSAiVlRPTCIsIGRlZiA9ICJ5ZWxsb3dfbWlzc2lsZSIsIH0sIFszXSA9IHsgb25seXRhcmdldGNhdGVnb3J5ID0gIlZUT0wiLCBkZWYgPSAieWVsbG93X21pc3NpbGUiLCB9LCBbNF0gPSB7IG9ubHl0YXJnZXRjYXRlZ29yeSA9ICJWVE9MIiwgZGVmID0gInllbGxvd19taXNzaWxlIiwgfSwgWzVdID0geyBkZWYgPSAiZW1wZ29vIiwgbWFpbmRpciA9ICIwIDAgMSIsIG1heGFuZ2xlZGlmID0gMTgwLCB9LCB9LCB9KSwgcmFwdG9yX2NvbnNvcnQgPSB7IGV4cGxvZGVhcyA9ICdyYXB0b3JfZW1wZGVhdGhfYmlnJywgbWF4dGhpc3VuaXQgPSBzY2FsZWRNYXgoNiksIGN1c3RvbXBhcmFtcyA9IHJhcHRvclNxdWFkKG1xQW5nZXJbMl0sIDEwMDAsICdiZXJzZXJrJyksIHdlYXBvbmRlZnMgPSB7IGV5ZWxhc2VyID0geyBuYW1lID0gJ0FuZ3J5IEV5ZXMnLCByZWxvYWR0aW1lID0gMywgcmdiY29sb3IgPSAnMSAwIDAuMycsIHJhbmdlID0gNTAwLCBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA2MDAwLCBjb21tYW5kZXJzID0gNjAwMCB9IH0sIGdvbyA9IHsgbmFtZSA9ICdTbm93YmFsbCBCYXJyYWdlJywgc291bmRzdGFydCA9ICdwZW5icmF5MicsIHNvdW5kU3RhcnRWb2x1bWUgPSAyLCBjZWd0YWcgPSAiYmxvYl90cmFpbF9ibHVlIiwgYnVyc3QgPSA4LCBzcHJheWFuZ2xlID0gMjA0OCwgd2VhcG9udmVsb2NpdHkgPSA2MDAsIHJlbG9hZHRpbWUgPSA0LCByYW5nZSA9IDEwMDAsIGhpZ2h0cmFqZWN0b3J5ID0gMSwgcmdiY29sb3IgPSAiMC43IDAuODUgMS4wIiwgZGFtYWdlID0geyBkZWZhdWx0ID0gMTAwMCB9IH0gfSwgd2VhcG9ucyA9IHsgWzFdID0geyBkZWYgPSAiZXllbGFzZXIiLCBiYWR0YXJnZXRjYXRlZ29yeSA9ICJWVE9MIE9CSkVDVCIgfSwgWzJdID0geyBkZWYgPSAnZ29vJywgbWFpbmRpciA9ICcwIDAgMScsIG1heGFuZ2xlZGlmID0gMTgwLCBiYWR0YXJnZXRjYXRlZ29yeSA9ICJWVE9MIE9CSkVDVCIgfSB9LCB9LCByYXB0b3JfZG9vbWJyaW5nZXIgPSB7IGV4cGxvZGVhcyA9ICJTY2F2Q29tQm9zc0V4cGxvIiwgbWF4dGhpc3VuaXQgPSBtYXhEb29tYnJpbmdlcnMsIGN1c3RvbXBhcmFtcyA9IHJhcHRvclNxdWFkKG1xQW5nZXJCb3NzLCAxMDAwLCAnYmVyc2VyaycsIG5pbCwgMSwgOTkpLCB3ZWFwb25kZWZzID0geyBleWVsYXNlciA9IHsgbmFtZSA9ICdFeWVzIG9mIERvb20nLCByZWxvYWR0aW1lID0gMywgcmdiY29sb3IgPSAnMC4zIDEgMCcsIHJhbmdlID0gNTAwLCBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA0ODAwMCwgY29tbWFuZGVycyA9IDI0MDAwIH0gfSwgZ29vID0geyBuYW1lID0gJ0FtYmVyIEhhaWxzdG9ybScsIHNvdW5kc3RhcnQgPSAncGVuYnJheTEnLCBzb3VuZFN0YXJ0Vm9sdW1lID0gMiwgY2VndGFnID0gImJsb2JfdHJhaWxfcmVkIiwgYnVyc3QgPSAxNSwgc3ByYXlhbmdsZSA9IDMwNzIsIHdlYXBvbnZlbG9jaXR5ID0gNjAwLCByZWxvYWR0aW1lID0gNSwgcmdiY29sb3IgPSAiMC43IDAuODUgMS4wIiwgaGlnaHRyYWplY3RvcnkgPSAxLCBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA1MDAwIH0gfSB9LCB3ZWFwb25zID0geyBbMV0gPSB7IGRlZiA9ICJleWVsYXNlciIsIGJhZHRhcmdldGNhdGVnb3J5ID0gIlZUT0wgT0JKRUNUIiB9LCBbMl0gPSB7IGRlZiA9ICdnb28nLCBtYWluZGlyID0gJzAgMCAxJywgbWF4YW5nbGVkaWYgPSAxODAsIGJhZHRhcmdldGNhdGVnb3J5ID0gIlZUT0wgT0JKRUNUIiB9IH0gfSwgcmFwdG9yX21hbWFfYmEgPSB7IG1heHRoaXN1bml0ID0gc2NhbGVkTWF4KDQpLCBjdXN0b21wYXJhbXMgPSByYXB0b3JTcXVhZCg1NSwgbXFBbmdlclszXS0xLCAnYmVyc2VyaycpLCB3ZWFwb25kZWZzID0geyBnb28gPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDc1MCB9IH0sIG1lbGVlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA3NTAgfSB9IH0gfSwgcmFwdG9yX21hbWFfZmkgPSB7IGV4cGxvZGVhcyA9ICdyYXB0b3JfZW1wZGVhdGhfYmlnJywgbWF4dGhpc3VuaXQgPSBzY2FsZWRNYXgoNCksIGN1c3RvbXBhcmFtcyA9IHJhcHRvclNxdWFkKDU1LCBtcUFuZ2VyWzNdLTEsICdiZXJzZXJrJyksIHdlYXBvbmRlZnMgPSB7IGZsYW1ldGhyb3dlcnNwaWtlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA4MCB9IH0sIGZsYW1ldGhyb3dlcm1haW4gPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDE2MCB9IH0gfSB9LCByYXB0b3JfbWFtYV9lbCA9IHsgbWF4dGhpc3VuaXQgPSBzY2FsZWRNYXgoNCksIGN1c3RvbXBhcmFtcyA9IHJhcHRvclNxdWFkKDY1LCAxMDAwLCAnYmVyc2VyaycpIH0sIHJhcHRvcl9tYW1hX2FjID0geyBtYXh0aGlzdW5pdCA9IHNjYWxlZE1heCg0KSwgY3VzdG9tcGFyYW1zID0gcmFwdG9yU3F1YWQoNjAsIDEwMDAsICdiZXJzZXJrJyksIHdlYXBvbmRlZnMgPSB7IG1lbGVlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSA3NTAgfSB9IH0gfSwgcmFwdG9yX2xhbmRfYXNzYXVsdF9iYXNpY190NF92MiA9IHsgbWF4dGhpc3VuaXQgPSBzY2FsZWRNYXgoOCksIGN1c3RvbXBhcmFtcyA9IHJhcHRvclNxdWFkKDMzLCA1MCwgJ3JhaWRlcicpIH0sIHJhcHRvcl9sYW5kX2Fzc2F1bHRfYmFzaWNfdDRfdjEgPSB7IG1heHRoaXN1bml0ID0gc2NhbGVkTWF4KDEyKSwgY3VzdG9tcGFyYW1zID0gcmFwdG9yU3F1YWQoNTEsIDY0LCAncmFpZGVyJywgJ2Jhc2ljJywgMikgfSB9IGRvIHVuaXREZWZzW2ZdID0gdW5pdERlZnNbZl0gb3Ige30gdGFibGUubWVyZ2VJblBsYWNlKHVuaXREZWZzW2ZdLCB1LCB0cnVlKSBlbmQgbG9jYWwgbmV3Q29zdHMgPSB7IHJhcHRvcl9tYW1hX2JhID0gMzYwMDAsIHJhcHRvcl9tYW1hX2ZpID0gMzYwMDAsIHJhcHRvcl9tYW1hX2VsID0gMzYwMDAsIHJhcHRvcl9tYW1hX2FjID0gMzYwMDAsIHJhcHRvcl9jb25zb3J0ID0gNDUwMDAsIHJhcHRvcl9kb29tYnJpbmdlciA9IDkwMDAwLCB9IGxvY2FsIEggPSBVbml0RGVmX1Bvc3QgZnVuY3Rpb24gVW5pdERlZl9Qb3N0KHAsIEkpIGlmIEggdGhlbiBIKHAsIEkpIGVuZCBsb2NhbCBuYkhwU2NhbGUgPSAxIGlmIG5iSHBNdWx0ID4gMS4zIHRoZW4gbmJIcFNjYWxlID0gbmJIcE11bHQgLyAxLjMgZW5kIGZvciB1bml0TmFtZSwgYmFzZUNvc3QgaW4gcGFpcnMobmV3Q29zdHMpIGRvIGlmIFVuaXREZWZzW3VuaXROYW1lXSB0aGVuIGxvY2FsIGZpbmFsQ29zdCA9IG1hdGguZmxvb3IoYmFzZUNvc3QgKiBuYkhwU2NhbGUpIFVuaXREZWZzW3VuaXROYW1lXS5tZXRhbGNvc3QgPSBmaW5hbENvc3QgZW5kIGVuZCBlbmQ
Cross Faction T2	!bset tweakdefs6 LS1Dcm9zcyBGYWN0aW9uIFRheCA3MCUKLS0gQXV0aG9yczogVGV0cmlzQ28KLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvCmxvY2FsIHVuaXREZWZzLCB0YXgsIHQyRmFjdG9yaWVzLCB0YXhlZFQyRmFjdG9yaWVzLCB1bml0STE4TiwgX3RheGVkLCB0YXhlZFRpdGxlUG9zdGZpeCA9IFVuaXREZWZzIG9yIHt9LCAxLjcsIHt9LCB7fSwgSnNvbi5kZWNvZGUoVkZTLkxvYWRGaWxlKCdsYW5ndWFnZS9lbi91bml0cy5qc29uJykpLCAnX3RheGVkJywgJyAoVGF4ZWQpJyBmb3IgbmFtZSwgZGVmIGluIHBhaXJzKHVuaXREZWZzKSBkbyBpZiBkZWYuY3VzdG9tcGFyYW1zIGFuZCBkZWYuY3VzdG9tcGFyYW1zLnN1YmZvbGRlciBhbmQgKGRlZi5jdXN0b21wYXJhbXMuc3ViZm9sZGVyOm1hdGNoICdGYWN0JyBvciBkZWYuY3VzdG9tcGFyYW1zLnN1YmZvbGRlcjptYXRjaCAnTGFiJykgYW5kIGRlZi5jdXN0b21wYXJhbXMudGVjaGxldmVsID09IDIgdGhlbiBsb2NhbCB1bml0VGl0bGUgPSB1bml0STE4TiBhbmQgdW5pdEkxOE4udW5pdHMubmFtZXNbbmFtZV0gb3IgbmFtZSB0MkZhY3Rvcmllc1tuYW1lXSA9IDEgdGF4ZWRUMkZhY3Rvcmllc1tuYW1lIC4uIF90YXhlZF0gPSB0YWJsZS5tZXJnZShkZWYsIHsgZW5lcmd5Y29zdCA9IGRlZi5lbmVyZ3ljb3N0ICogdGF4LCBpY29udHlwZSA9IG5hbWUsIG1ldGFsY29zdCA9IGRlZi5tZXRhbGNvc3QgKiB0YXgsIG5hbWUgPSB1bml0VGl0bGUgLi4gdGF4ZWRUaXRsZVBvc3RmaXgsIGN1c3RvbXBhcmFtcyA9IHsgaTE4bl9lbl9odW1hbm5hbWUgPSB1bml0VGl0bGUgLi4gdGF4ZWRUaXRsZVBvc3RmaXgsIGkxOG5fZW5fdG9vbHRpcCA9IHVuaXRJMThOIGFuZCB1bml0STE4Ti51bml0cy5kZXNjcmlwdGlvbnNbbmFtZV0gb3IgbmFtZSwgfSwgfSkgZW5kIGVuZCBmb3IgYnVpbGRlck5hbWUsIFQxVDJCdWlsZGVyRGVmIGluIHBhaXJzKHVuaXREZWZzKSBkbyBpZiBUMVQyQnVpbGRlckRlZi5idWlsZG9wdGlvbnMgdGhlbiBmb3IgXywgYnVpbGRvcHRpb24gaW4gcGFpcnMoVDFUMkJ1aWxkZXJEZWYuYnVpbGRvcHRpb25zKSBkbyBpZiB0MkZhY3Rvcmllc1tidWlsZG9wdGlvbl0gdGhlbiBmb3IgXywgZmFjdGlvbiBpbiBwYWlycyB7ICdhcm0nLCAnY29yJywgJ2xlZycgfSBkbyBsb2NhbCBjcm9zc2ZhY3Rpb25UYXhlZE9wdGlvbiA9IGZhY3Rpb24gLi4gYnVpbGRvcHRpb246c3ViKDQpIC4uIF90YXhlZCBpZiBidWlsZG9wdGlvbjpzdWIoMSwgMykgfj0gZmFjdGlvbiBhbmQgdGF4ZWRUMkZhY3Rvcmllc1tjcm9zc2ZhY3Rpb25UYXhlZE9wdGlvbl0gdGhlbiB1bml0RGVmc1tidWlsZGVyTmFtZV0uYnVpbGRvcHRpb25zWyN1bml0RGVmc1tidWlsZGVyTmFtZV0uYnVpbGRvcHRpb25zICsgMV0gPSBjcm9zc2ZhY3Rpb25UYXhlZE9wdGlvbiBlbmQgZW5kIGVuZCBlbmQgZW5kIGVuZCB0YWJsZS5tZXJnZUluUGxhY2UodW5pdERlZnMsIHRheGVkVDJGYWN0b3JpZXMp
T3 Eco	!bset tweakdefs7 LS1UMyBFY28gYnVpbHRpbiB2NgotLSBkb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVFTVnN1QUFNaEJyaGlaZFRpaFZmU0N3UHpiYlpXRExDdFhXUDIzQ1Uwa28KbG9jYWwgdW5pdERlZnMsIGNvbnMgPSBVbml0RGVmcyBvciB7fSwgeyAnYXJtYWNrJywgJ2FybWFjYScsICdhcm1hY3YnLCAnY29yYWNrJywgJ2NvcmFjYScsICdjb3JhY3YnLCAnbGVnYWNrJywgJ2xlZ2FjYScsICdsZWdhY3YnIH0gZm9yIF8sIGZhY3Rpb25NTSBpbiBwYWlycyh7J2FybW1ta3J0MycsICdjb3JtbWtydDMnLCAnbGVnYWR2ZWNvbnZ0Myd9KSBkbyB0YWJsZS5tZXJnZUluUGxhY2UodW5pdERlZnNbZmFjdGlvbk1NXSwge2Zvb3RwcmludHggPSA2LCBmb290cHJpbnR6ID0gNn0pIGVuZCBmb3IgXywgYnVpbGRlck5hbWUgaW4gcGFpcnMoY29ucykgZG8gbG9jYWwgZmFjdGlvbiwgbkJ1aWxkT3B0aW9ucyA9IGJ1aWxkZXJOYW1lOnN1YigxLCAzKSwgI3VuaXREZWZzW2J1aWxkZXJOYW1lXS5idWlsZG9wdGlvbnMgdW5pdERlZnNbYnVpbGRlck5hbWVdLmJ1aWxkb3B0aW9uc1tuQnVpbGRPcHRpb25zICsgMV0gPSBmYWN0aW9uIC4uICdhZnVzdDMnIHVuaXREZWZzW2J1aWxkZXJOYW1lXS5idWlsZG9wdGlvbnNbbkJ1aWxkT3B0aW9ucyArIDJdID0gZmFjdGlvbiA9PSAnbGVnJyBhbmQgJ2xlZ2FkdmVjb252dDMnIG9yIGZhY3Rpb24gLi4gJ21ta3J0MycgZW5kIGRvIGxvY2FsIGJ1aWxkZXJOYW1lID0gJ2xlZ2NrJyBsb2NhbCBuQnVpbGRPcHRpb25zID0gI3VuaXREZWZzW2J1aWxkZXJOYW1lXS5idWlsZG9wdGlvbnMgdW5pdERlZnNbYnVpbGRlck5hbWVdLmJ1aWxkb3B0aW9uc1tuQnVpbGRPcHRpb25zICsgMV0gPSAnbGVnZHRmJyBlbmQgZm9yIF8sIHVuaXROYW1lIGluIHBhaXJzKHsgJ2NvcnV3YWR2ZXMnLCAnbGVnYWR2ZXN0b3JlJyB9KSBkbyB0YWJsZS5tZXJnZUluUGxhY2UodW5pdERlZnNbdW5pdE5hbWVdLCB7IGZvb3RwcmludHggPSA0LCBmb290cHJpbnR6ID0gNCB9KSBlbmQ
T3 Builders	!bset tweakdefs8 
Unit Launchers	!bset tweakdefs9 
Main tweakunits	!bset tweakunits 
Legion NuttyB Evolving Commander	!bset tweakunits1 
Armada NuttyB Evolving Commander	!bset tweakunits2 
Cortex NuttyB Evolving Commander	!bset tweakunits3 LS1OdXR0eUIgdjEuNTJjIENvcnRleCBDb20KLS0gQXV0aG9yczogQ2hyaXNweU51dCwgQmFja0Jhc2gKLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvCnJldHVybiB7IGNvcmNvbSA9IHsgY3VzdG9tcGFyYW1zID0geyBldm9sdXRpb25fdGFyZ2V0ID0gJ2NvcmNvbWx2bDInLCBldm9sdXRpb25fY29uZGl0aW9uID0gJ3RpbWVyX2dsb2JhbCcsIGV2b2x1dGlvbl90aW1lciA9IDQyMCwgaW5oZXJpdHhwcmF0ZW11bHRpcGxpZXIgPSAwLjUsIGNoaWxkcmVuaW5oZXJpdHhwID0gIlRVUlJFVCBNT0JJTEVCVUlMVCIsIHBhcmVudHNpbmhlcml0eHAgPSAiVFVSUkVUIE1PQklMRUJVSUxUIiB9LCBhdXRvaGVhbCA9IDgwLCBzcGVlZCA9IDQ1LCBlbmVyZ3ltYWtlID0gNzUsIG1ldGFsbWFrZSA9IDYsIGhlYWx0aCA9IDU1MDAsIGJ1aWxkb3B0aW9ucyA9IHsgWzI4XSA9ICdjb3JobGx0JywgWzI5XSA9ICdjb3JuZWNybycsIFszMF0gPSAnY29ybGV2bHInLCBbMzFdID0gJ2NvcmFrJywgWzMyXSA9ICdjb3JtYXcnIH0sIHdlYXBvbmRlZnMgPSB7IGNvcmNvbWxhc2VyID0geyByYW5nZSA9IDM3MCwgZGFtYWdlID0geyBib21iZXJzID0gMTgwLCBkZWZhdWx0ID0gMjYwLCBmaWdodGVycyA9IDExMCwgc3VicyA9IDUgfSB9LCBkaXNpbnRlZ3JhdG9yID0geyBlbmVyZ3lwZXJzaG90ID0gMTAwMCwgcmVsb2FkdGltZSA9IDggfSB9IH0sIGNvcmNvbWx2bDIgPSB7IHNwZWVkID0gNjIsIGhlYWx0aCA9IDg1MDAsIGVuZXJneW1ha2UgPSAyNTUsIG1ldGFsbWFrZSA9IDE2LCBhdXRvaGVhbCA9IDMwMCwgYnVpbGRkaXN0YW5jZSA9IDIwMCwgd29ya2VydGltZSA9IDYwMCwgYnVpbGRvcHRpb25zID0geyBbMV0gPSAnY29yc29sYXInLCBbMl0gPSAnY29yYWR2c29sJywgWzNdID0gJ2NvcndpbicsIFs0XSA9ICdjb3JnZW8nLCBbNV0gPSAnY29ybXN0b3InLCBbNl0gPSAnY29yZXN0b3InLCBbN10gPSAnY29ybWV4JywgWzhdID0gJ2NvcmV4cCcsIFs5XSA9ICdjb3JtYWtyJywgWzEwXSA9ICdjb3JjYW4nLCBbMTFdID0gJ2NvcnJlYXAnLCBbMTJdID0gJ2NvcmxhYicsIFsxM10gPSAnY29ydnAnLCBbMTRdID0gJ2NvcmFwJywgWzE1XSA9ICdjb3JocCcsIFsxNl0gPSAnY29ybmFub3RjJywgWzE3XSA9ICdjb3JleWVzJywgWzE4XSA9ICdjb3JyYWQnLCBbMTldID0gJ2NvcmRyYWcnLCBbMjBdID0gJ2Nvcm1hdycsIFsyMV0gPSAnY29ybGx0JywgWzIyXSA9ICdjb3JobGx0JywgWzIzXSA9ICdjb3JobHQnLCBbMjRdID0gJ2NvcnB1bicsIFsyNV0gPSAnY29ycmwnLCBbMjZdID0gJ2Nvcm1hZHNhbScsIFsyN10gPSAnY29yZXJhZCcsIFsyOF0gPSAnY29yZGwnLCBbMjldID0gJ2NvcmphbXQnLCBbMzBdID0gJ2Nvcmp1bm8nLCBbMzFdID0gJ2NvcnN5JywgWzMyXSA9ICdjb3J1d2dlbycsIFszM10gPSAnY29yZmFzcCcsIFszNF0gPSAnY29ybmVyY28nLCBbMzVdID0gJ2NvcnV3ZXMnLCBbMzZdID0gJ2NvcnBsYXQnLCBbMzddID0gJ2NvcmZocCcsIFszOF0gPSAnY29ydXdtcycsIFszOV0gPSAnY29yZmhsdCcsIFs0MF0gPSAnY29ybmFub3RjcGxhdCcsIFs0MV0gPSAnY29yZm1rcicsIFs0Ml0gPSAnY29ydGlkZScsIFs0M10gPSAnY29yZnJhZCcsIFs0NF0gPSAnY29yZnJ0JywgWzQ1XSA9ICdjb3JmZHJhZycsIFs0Nl0gPSAnY29ydGwnLCBbNDddID0gJ2Nvcm5lY3JvJyB9LCBjdXN0b21wYXJhbXMgPSB7IGV2b2x1dGlvbl90YXJnZXQgPSAnY29yY29tbHZsMycsIGV2b2x1dGlvbl9jb25kaXRpb24gPSAndGltZXJfZ2xvYmFsJywgZXZvbHV0aW9uX3RpbWVyID0gMTMyMCwgc2hpZWxkX3Bvd2VyID0gNTAwLCBzaGllbGRfcmFkaXVzID0gMTAwLCBpbmhlcml0eHByYXRlbXVsdGlwbGllciA9IDAuNSwgY2hpbGRyZW5pbmhlcml0eHAgPSAiVFVSUkVUIE1PQklMRUJVSUxUIiwgcGFyZW50c2luaGVyaXR4cCA9ICJUVVJSRVQgTU9CSUxFQlVJTFQiIH0sIHdlYXBvbmRlZnMgPSB7IGFybWNvbWxhc2VyID0geyBhcmVhb2ZlZmZlY3QgPSAxNiwgYXZvaWRmZWF0dXJlID0gZmFsc2UsIGJlYW10aW1lID0gMC4xLCBjb3JldGhpY2tuZXNzID0gMC4xLCBjcmF0ZXJhcmVhb2ZlZmZlY3QgPSAwLCBjcmF0ZXJib29zdCA9IDAsIGNyYXRlcm11bHQgPSAwLCBjeWxpbmRlcnRhcmdldGluZyA9IDEsIGVkZ2VlZmZlY3RpdmVuZXNzID0gMSwgZXhwbG9zaW9uZ2VuZXJhdG9yID0gJ2N1c3RvbTpsYXNlcmhpdC1zbWFsbC1yZWQnLCBmaXJlc3RhcnRlciA9IDcwLCBpbXBhY3Rvbmx5ID0gMSwgaW1wdWxzZWJvb3N0ID0gMCwgaW1wdWxzZWZhY3RvciA9IDAsIGxhc2VyZmxhcmVzaXplID0gNy43LCBuYW1lID0gJ0xpZ2h0IGNsb3NlLXF1YXJ0ZXJzIGcyZy9nMmEgbGFzZXInLCBub3NlbGZkYW1hZ2UgPSB0cnVlLCByYW5nZSA9IDUwMCwgcmVsb2FkdGltZSA9IDAuNCwgcmdiY29sb3IgPSAnMC42IDAuMyAwLjgnLCBzb3VuZGhpdGRyeSA9ICcnLCBzb3VuZGhpdHdldCA9ICdzaXp6bGUnLCBzb3VuZHN0YXJ0ID0gJ2xhc3JmaXIxJywgc291bmR0cmlnZ2VyID0gMSwgdGFyZ2V0bW92ZWVycm9yID0gMC4wNSwgdGhpY2tuZXNzID0gNCwgdG9sZXJhbmNlID0gMTAwMDAsIHR1cnJldCA9IHRydWUsIHdlYXBvbnR5cGUgPSAnQmVhbUxhc2VyJywgd2VhcG9udmVsb2NpdHkgPSA5MDAsIGRhbWFnZSA9IHsgYm9tYmVycyA9IDE4MCwgZGVmYXVsdCA9IDE1MDAsIGZpZ2h0ZXJzID0gMTEwLCBzdWJzID0gNSB9IH0sIGRpc2ludGVncmF0b3IgPSB7IGFyZWFvZmVmZmVjdCA9IDM2LCBhdm9pZGZlYXR1cmUgPSBmYWxzZSwgYXZvaWRmcmllbmRseSA9IGZhbHNlLCBhdm9pZGdyb3VuZCA9IGZhbHNlLCBib3VuY2VyZWJvdW5kID0gMCwgY2VndGFnID0gJ2RndW5wcm9qZWN0aWxlJywgY29tbWFuZGZpcmUgPSB0cnVlLCBjcmF0ZXJib29zdCA9IDAsIGNyYXRlcm11bHQgPSAwLjE1LCBlZGdlZWZmZWN0aXZlbmVzcyA9IDAuMTUsIGVuZXJneXBlcnNob3QgPSA1MDAsIGV4cGxvc2lvbmdlbmVyYXRvciA9ICdjdXN0b206ZXhwbGRndW4nLCBmaXJlc3RhcnRlciA9IDEwMCwgZmlyZXN1Ym1lcnNlZCA9IGZhbHNlLCBncm91bmRib3VuY2UgPSB0cnVlLCBpbXB1bHNlYm9vc3QgPSAwLCBpbXB1bHNlZmFjdG9yID0gMCwgbmFtZSA9ICdEaXNpbnRlZ3JhdG9yJywgbm9leHBsb2RlID0gdHJ1ZSwgbm9zZWxmZGFtYWdlID0gdHJ1ZSwgcmFuZ2UgPSAyNTAsIHJlbG9hZHRpbWUgPSA2LCBwYXJhbHl6ZXIgPSB7fSwgc291bmRoaXQgPSAneHBsb21hczJzJywgc291bmRoaXR3ZXQgPSAnc2l6emxleHMnLCBzb3VuZHN0YXJ0ID0gJ2Rpc2lndW4xJywgc291bmRoaXR2b2x1bWUgPSAzNiwgc291bmRzdGFydHZvbHVtZSA9IDk2LCBzb3VuZHRyaWdnZXIgPSB0cnVlLCB0b2xlcmFuY2UgPSAxMDAwMCwgdHVycmV0ID0gdHJ1ZSwgd2F0ZXJ3ZWFwb24gPSB0cnVlLCB3ZWFwb250aW1lciA9IDQuMiwgd2VhcG9udHlwZSA9ICdER3VuJywgd2VhcG9udmVsb2NpdHkgPSAzMDAsIGRhbWFnZSA9IHsgY29tbWFuZGVycyA9IDAsIGRlZmF1bHQgPSAyMDAwMCwgcmFwdG9ycyA9IDEwMDAwIH0gfSB9LCB3ZWFwb25zID0geyBbMV0gPSB7IGRlZiA9ICdhcm1jb21sYXNlcicsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICdOT1RTVUInLCBmYXN0YXV0b3JldGFyZ2V0aW5nID0gdHJ1ZSB9LCBbM10gPSB7IGRlZiA9ICdESVNJTlRFR1JBVE9SJywgb25seXRhcmdldGNhdGVnb3J5ID0gJ05PVFNVQicgfSB9IH0sIGNvcmNvbWx2bDMgPSB7IHNwZWVkID0gODAsIGhlYWx0aCA9IDMwMDAwLCBlbmVyZ3ltYWtlID0gMjE4MCwgbWV0YWxtYWtlID0gNDksIGF1dG9oZWFsID0gMTUwMCwgd29ya2VydGltZSA9IDEyMDAsIGJ1aWxkZGlzdGFuY2UgPSAyNTAsIGJ1aWxkb3B0aW9ucyA9IHsgWzFdID0gJ2NvcmZ1cycsIFsyXSA9ICdjb3JhZnVzJywgWzNdID0gJ2NvcmFnZW8nLCBbNF0gPSAnY29ybW9obycsIFs1XSA9ICdjb3JtZXhwJywgWzZdID0gJ2Nvcm1ta3InLCBbN10gPSAnY29ydXdhZHZlcycsIFs4XSA9ICdjb3J1d2Fkdm1zJywgWzldID0gJ2NvcmFyYWQnLCBbMTBdID0gJ2NvcnNocm91ZCcsIFsxMV0gPSAnY29yZm9ydCcsIFsxMl0gPSAnY29ybGFiJywgWzEzXSA9ICdjb3J0YXJnJywgWzE0XSA9ICdjb3JzZCcsIFsxNV0gPSAnY29yZ2F0ZScsIFsxNl0gPSAnY29ydG9hc3QnLCBbMTddID0gJ2NvcnZpcGUnLCBbMThdID0gJ2NvcmRvb20nLCBbMTldID0gJ2NvcmZsYWsnLCBbMjBdID0gJ2NvcnNjcmVhbWVyJywgWzIxXSA9ICdjb3J2cCcsIFsyMl0gPSAnY29yZm1kJywgWzIzXSA9ICdjb3JhcCcsIFsyNF0gPSAnY29yaW50JywgWzI1XSA9ICdjb3JwbGF0JywgWzI2XSA9ICdjb3JzeScsIFsyN10gPSAnY29ydXdtbWUnLCBbMjhdID0gJ2NvcnV3bW1tJywgWzI5XSA9ICdjb3JlbmFhJywgWzMwXSA9ICdjb3JmZG9vbScsIFszMV0gPSAnY29yYXRsJywgWzMyXSA9ICdjb3J1d2Z1cycsIFszM10gPSAnY29yanVnZycsIFszNF0gPSAnY29yc2hpdmEnLCBbMzVdID0gJ2NvcnN1bW8nLCBbMzZdID0gJ2NvcmdvbCcsIFszN10gPSAnY29ya29yZycsIFszOF0gPSAnY29ybmFub3RjMnBsYXQnLCBbMzldID0gJ2Nvcm5hbm90Y3QyJywgWzQwXSA9ICdjb3JuZWNybycsIFs0MV0gPSAnY29yZG9vbXQzJywgWzQyXSA9ICdjb3JobGxsbHQnLCBbNDNdID0gJ2Nvcm1hdycsIFs0NF0gPSAnY29ybXdhbGwnLCBbNDVdID0gJ2NvcmdhdGV0MycsIFs0Nl0gPSAnbGVnZW5kYXJ5X2J1bHdhcmsnLCBbNDddID0gJ2Nvcm5hbm90Y3QzJyB9LCBjdXN0b21wYXJhbXMgPSB7IGV2b2x1dGlvbl90YXJnZXQgPSAnY29yY29tbHZsNCcsIGV2b2x1dGlvbl9jb25kaXRpb24gPSAndGltZXJfZ2xvYmFsJywgZXZvbHV0aW9uX3RpbWVyID0gMTc0MCwgaW5oZXJpdHhwcmF0ZW11bHRpcGxpZXIgPSAwLjUsIGNoaWxkcmVuaW5oZXJpdHhwID0gIlRVUlJFVCBNT0JJTEVCVUlMVCIsIHBhcmVudHNpbmhlcml0eHAgPSAiVFVSUkVUIE1PQklMRUJVSUxUIiB9LCB3ZWFwb25kZWZzID0geyBjb3Jjb21sYXNlciA9IHsgYXJlYW9mZWZmZWN0ID0gMTIsIGF2b2lkZmVhdHVyZSA9IGZhbHNlLCBiZWFtdGltZSA9IDAuMSwgY29yZXRoaWNrbmVzcyA9IDAuMSwgY3JhdGVyYXJlYW9mZWZmZWN0ID0gMCwgY3JhdGVyYm9vc3QgPSAwLCBjcmF0ZXJtdWx0ID0gMCwgY3lsaW5kZXJ0YXJnZXRpbmcgPSAxLCBlZGdlZWZmZWN0aXZlbmVzcyA9IDEsIGV4cGxvc2lvbmdlbmVyYXRvciA9ICdjdXN0b206bGFzZXJoaXQtc21hbGwtcmVkJywgZmlyZXN0YXJ0ZXIgPSA3MCwgaW1wYWN0b25seSA9IDEsIGltcHVsc2Vib29zdCA9IDAsIGltcHVsc2VmYWN0b3IgPSAwLCBsYXNlcmZsYXJlc2l6ZSA9IDUuNSwgbmFtZSA9ICdKN0xhc2VyJywgbm9zZWxmZGFtYWdlID0gdHJ1ZSwgcmFuZ2UgPSA5MDAsIHJlbG9hZHRpbWUgPSAwLjQsIHJnYmNvbG9yID0gJzAuNyAwIDEnLCBzb3VuZGhpdGRyeSA9ICcnLCBzb3VuZGhpdHdldCA9ICdzaXp6bGUnLCBzb3VuZHN0YXJ0ID0gJ2xhc3JmaXIxJywgc291bmR0cmlnZ2VyID0gMSwgdGFyZ2V0bW92ZWVycm9yID0gMC4wNSwgdGhpY2tuZXNzID0gMywgdG9sZXJhbmNlID0gMTAwMDAsIHR1cnJldCA9IHRydWUsIHdlYXBvbnR5cGUgPSAnQmVhbUxhc2VyJywgd2VhcG9udmVsb2NpdHkgPSA5MDAsIGRhbWFnZSA9IHsgZGVmYXVsdCA9IDIwMDAsIHN1YnMgPSA1IH0gfSwgZGlzaW50ZWdyYXRvciA9IHsgYXJlYW9mZWZmZWN0ID0gMzYsIGF2b2lkZmVhdHVyZSA9IGZhbHNlLCBhdm9pZGZyaWVuZGx5ID0gZmFsc2UsIGF2b2lkZ3JvdW5kID0gZmFsc2UsIGJvdW5jZXJlYm91bmQgPSAwLCBjZWd0YWcgPSAnZGd1bnByb2plY3RpbGUnLCBjb21tYW5kZmlyZSA9IHRydWUsIGNyYXRlcmJvb3N0ID0gMCwgY3JhdGVybXVsdCA9IDAuMTUsIGVkZ2VlZmZlY3RpdmVuZXNzID0gMC4xNSwgZW5lcmd5cGVyc2hvdCA9IDUwMCwgZXhwbG9zaW9uZ2VuZXJhdG9yID0gJ2N1c3RvbTpleHBsZGd1bicsIGZpcmVzdGFydGVyID0gMTAwLCBmaXJlc3VibWVyc2VkID0gZmFsc2UsIGdyb3VuZGJvdW5jZSA9IHRydWUsIGltcHVsc2Vib29zdCA9IDAsIGltcHVsc2VmYWN0b3IgPSAwLCBuYW1lID0gJ0Rpc2ludGVncmF0b3InLCBub2V4cGxvZGUgPSB0cnVlLCBub3NlbGZkYW1hZ2UgPSB0cnVlLCByYW5nZSA9IDI1MCwgcmVsb2FkdGltZSA9IDMsIHBhcmFseXplciA9IHt9LCBzb3VuZGhpdCA9ICd4cGxvbWFzMnMnLCBzb3VuZGhpdHdldCA9ICdzaXp6bGV4cycsIHNvdW5kc3RhcnQgPSAnZGlzaWd1bjEnLCBzb3VuZGhpdHZvbHVtZSA9IDM2LCBzb3VuZHN0YXJ0dm9sdW1lID0gOTYsIHNvdW5kdHJpZ2dlciA9IHRydWUsIHNpemUgPSA0LCB0b2xlcmFuY2UgPSAxMDAwMCwgdHVycmV0ID0gdHJ1ZSwgd2F0ZXJ3ZWFwb24gPSB0cnVlLCB3ZWFwb250aW1lciA9IDQuMiwgd2VhcG9udHlwZSA9ICdER3VuJywgd2VhcG9udmVsb2NpdHkgPSAzMDAsIGRhbWFnZSA9IHsgY29tbWFuZGVycyA9IDAsIGRlZmF1bHQgPSAyMDAwMCwgc2NhdmJvc3MgPSAxMDAwLCByYXB0b3JzID0gMTAwMDAgfSB9IH0sIHdlYXBvbnMgPSB7IFsxXSA9IHsgZGVmID0gJ0NPUkNPTUxBU0VSJywgb25seXRhcmdldGNhdGVnb3J5ID0gJ05PVFNVQicsIGZhc3RhdXRvcmV0YXJnZXRpbmcgPSB0cnVlIH0sIFs1XSA9IHsgZGVmID0gJycgfSB9IH0sIGNvcmNvbWx2bDQgPSB7IHNwZWVkID0gODAsIGhlYWx0aCA9IDUwMDAwLCBlbmVyZ3ltYWtlID0gMjM4MCwgbWV0YWxtYWtlID0gNTYsIGF1dG9oZWFsID0gMzU1MCwgd29ya2VydGltZSA9IDE4MDAsIGJ1aWxkZGlzdGFuY2UgPSAzMDAsIGJ1aWxkb3B0aW9ucyA9IHsgWzFdID0gJ2NvcmZ1cycsIFsyXSA9ICdjb3JhZnVzJywgWzNdID0gJ2NvcmFnZW8nLCBbNF0gPSAnY29yYmhtdGgnLCBbNV0gPSAnY29ybW9obycsIFs2XSA9ICdjb3JtZXhwJywgWzddID0gJ2Nvcm1ta3InLCBbOF0gPSAnY29ydXdhZHZlcycsIFs5XSA9ICdjb3J1d2Fkdm1zJywgWzEwXSA9ICdjb3JhcmFkJywgWzExXSA9ICdjb3JzaHJvdWQnLCBbMTJdID0gJ2NvcmZvcnQnLCBbMTNdID0gJ2NvcmxhYicsIFsxNF0gPSAnY29ydGFyZycsIFsxNV0gPSAnY29yc2QnLCBbMTZdID0gJ2NvcmdhdGUnLCBbMTddID0gJ2NvcnRvYXN0JywgWzE4XSA9ICdjb3J2aXBlJywgWzE5XSA9ICdjb3Jkb29tJywgWzIwXSA9ICdjb3JmbGFrJywgWzIxXSA9ICdjb3JzY3JlYW1lcicsIFsyMl0gPSAnY29ydnAnLCBbMjNdID0gJ2NvcmZtZCcsIFsyNF0gPSAnY29yYXAnLCBbMjVdID0gJ2NvcmludCcsIFsyNl0gPSAnY29ycGxhdCcsIFsyN10gPSAnY29yc3knLCBbMjhdID0gJ2NvcnV3bW1lJywgWzI5XSA9ICdjb3J1d21tbScsIFszMF0gPSAnY29yZW5hYScsIFszMV0gPSAnY29yZmRvb20nLCBbMzJdID0gJ2NvcmF0bCcsIFszM10gPSAnY29ydXdmdXMnLCBbMzRdID0gJ2Nvcmp1Z2cnLCBbMzVdID0gJ2NvcnNoaXZhJywgWzM2XSA9ICdjb3JzdW1vJywgWzM3XSA9ICdjb3Jnb2wnLCBbMzhdID0gJ2NvcmtvcmcnLCBbMzldID0gJ2Nvcm5hbm90YzJwbGF0JywgWzQwXSA9ICdjb3JuYW5vdGN0MicsIFs0MV0gPSAnY29ybmVjcm8nLCBbNDJdID0gJ2NvcmRvb210MycsIFs0M10gPSAnY29yaGxsbGx0JywgWzQ0XSA9ICdjb3JtYXcnLCBbNDVdID0gJ2Nvcm13YWxsJywgWzQ2XSA9ICdjb3JnYXRldDMnLCBbNDddID0gJ2xlZ2VuZGFyeV9idWx3YXJrJywgWzQ4XSA9ICdjb3JuYW5vdGN0MycgfSwgY3VzdG9tcGFyYW1zID0geyBzaGllbGRfcG93ZXIgPSA1MDAsIHNoaWVsZF9yYWRpdXMgPSAxMDAsIGluaGVyaXR4cHJhdGVtdWx0aXBsaWVyID0gMC41LCBjaGlsZHJlbmluaGVyaXR4cCA9ICJUVVJSRVQgTU9CSUxFQlVJTFQiLCBwYXJlbnRzaW5oZXJpdHhwID0gIlRVUlJFVCBNT0JJTEVCVUlMVCIgfSwgd2VhcG9uZGVmcyA9IHsgQ09SQ09NTEFTRVIgPSB7IGFyZWFvZmVmZmVjdCA9IDEyLCBhdm9pZGZlYXR1cmUgPSBmYWxzZSwgYmVhbXRpbWUgPSAwLjEsIGNvcmV0aGlja25lc3MgPSAwLjEsIGNyYXRlcmFyZWFvZmVmZmVjdCA9IDAsIGNyYXRlcmJvb3N0ID0gMCwgY3JhdGVybXVsdCA9IDAsIGN5bGluZGVydGFyZ2V0aW5nID0gMSwgZWRnZWVmZmVjdGl2ZW5lc3MgPSAxLCBleHBsb3Npb25nZW5lcmF0b3IgPSAnY3VzdG9tOmxhc2VyaGl0LXNtYWxsLXJlZCcsIGZpcmVzdGFydGVyID0gNzAsIGltcGFjdG9ubHkgPSAxLCBpbXB1bHNlYm9vc3QgPSAwLCBpbXB1bHNlZmFjdG9yID0gMCwgbGFzZXJmbGFyZXNpemUgPSA1LjUsIG5hbWUgPSAnSjdMYXNlcicsIG5vc2VsZmRhbWFnZSA9IHRydWUsIHJhbmdlID0gMTAwMCwgcmVsb2FkdGltZSA9IDAuNCwgcmdiY29sb3IgPSAnMC43IDAgMScsIHNvdW5kaGl0ZHJ5ID0gJycsIHNvdW5kaGl0d2V0ID0gJ3NpenpsZScsIHNvdW5kc3RhcnQgPSAnbGFzcmZpcjEnLCBzb3VuZHRyaWdnZXIgPSAxLCB0YXJnZXRtb3ZlZXJyb3IgPSAwLjA1LCB0aGlja25lc3MgPSAzLCB0b2xlcmFuY2UgPSAxMDAwMCwgdHVycmV0ID0gdHJ1ZSwgd2VhcG9udHlwZSA9ICdCZWFtTGFzZXInLCB3ZWFwb252ZWxvY2l0eSA9IDkwMCwgZGFtYWdlID0geyBkZWZhdWx0ID0gMjUwMCwgc3VicyA9IDUgfSB9LCBkaXNpbnRlZ3JhdG9yeGwgPSB7IGFyZWFvZmVmZmVjdCA9IDEwNSwgYXZvaWRmZWF0dXJlID0gZmFsc2UsIGF2b2lkZnJpZW5kbHkgPSB0cnVlLCBhdm9pZGdyb3VuZCA9IGZhbHNlLCBidXJzdCA9IDEsIGJ1cnN0cmF0ZSA9IDAsIGJvdW5jZXJlYm91bmQgPSAwLCBjZWd0YWcgPSAnZ2F1c3NjYW5ub25wcm9qZWN0aWxleGwnLCBjcmF0ZXJhcmVhb2ZlZmZlY3QgPSAwLCBjcmF0ZXJib29zdCA9IDAsIGNyYXRlcm11bHQgPSAwLCBjb21tYW5kZmlyZSA9IHRydWUsIGNhbWVyYVNoYWtlID0gMCwgZWRnZWVmZmVjdGl2ZW5lc3MgPSAxLCBlbmVyZ3lwZXJzaG90ID0gMCwgZXhwbG9zaW9uZ2VuZXJhdG9yID0gJ2N1c3RvbTpidXJuYmxhY2tiaWdnZXN0JywgZmlyZXN0YXJ0ZXIgPSAxMDAsIGZpcmVzdWJtZXJzZWQgPSBmYWxzZSwgZ3Jhdml0eWFmZmVjdGVkID0gdHJ1ZSwgaW1wdWxzZWZhY3RvciA9IDAsIGludGVuc2l0eSA9IDQsIG5hbWUgPSAnRGFya21hdHRlciBQaG90b24tRGlzcnVwdG9yJywgbm9leHBsb2RlID0gdHJ1ZSwgbm9zZWxmZGFtYWdlID0gdHJ1ZSwgcmFuZ2UgPSA1MDAsIHJlbG9hZHRpbWUgPSAxLCByZ2Jjb2xvciA9ICcwLjcgMC4zIDEuMCcsIHNpemUgPSA1LjUsIHNvdW5kaGl0ID0gJ3hwbG9tYXMyJywgc291bmRoaXR3ZXQgPSAnc2l6emxleHMnLCBzb3VuZHN0YXJ0ID0gJ2Rpc2lndW4xJywgc291bmR0cmlnZ2VyID0gdHJ1ZSwgdG9sZXJhbmNlID0gMTAwMDAsIHR1cnJldCA9IHRydWUsIHdlYXBvbnRpbWVyID0gNC4yLCB3ZWFwb250eXBlID0gJ0RHdW4nLCB3ZWFwb252ZWxvY2l0eSA9IDUwNSwgZGFtYWdlID0geyBjb21tYW5kZXJzID0gMCwgZGVmYXVsdCA9IDIwMDAwLCBzY2F2Ym9zcyA9IDEwMDAsIHJhcHRvcnMgPSAxMDAwMCB9IH0sIGNvcmNvbWV5ZWxhc2VyID0geyBhbGxvd05vbkJsb2NraW5nQWltID0gdHJ1ZSwgYXZvaWRmcmllbmRseSA9IHRydWUsIGFyZWFvZmVmZmVjdCA9IDYsIGF2b2lkZmVhdHVyZSA9IGZhbHNlLCBiZWFtdGltZSA9IDAuMDMzLCBjYW1lcmFzaGFrZSA9IDAuMSwgY29sbGlkZWZyaWVuZGx5ID0gZmFsc2UsIGNvcmV0aGlja25lc3MgPSAwLjM1LCBjcmF0ZXJhcmVhb2ZlZmZlY3QgPSAxMiwgY3JhdGVyYm9vc3QgPSAwLCBjcmF0ZXJtdWx0ID0gMCwgZWRnZWVmZmVjdGl2ZW5lc3MgPSAxLCBlbmVyZ3lwZXJzaG90ID0gMCwgZXhwbG9zaW9uZ2VuZXJhdG9yID0gJ2N1c3RvbTpsYXNlcmhpdC1zbWFsbC1yZWQnLCBmaXJlc3RhcnRlciA9IDkwLCBmaXJldG9sZXJhbmNlID0gMzAwLCBpbXB1bHNlZmFjdG9yID0gMCwgbGFzZXJmbGFyZXNpemUgPSAyLCBuYW1lID0gJ0V5ZUxhc2VyJywgbm9zZWxmZGFtYWdlID0gdHJ1ZSwgcHJveGltaXR5cHJpb3JpdHkgPSAxLCByYW5nZSA9IDg3MCwgcmVsb2FkdGltZSA9IDAuMDMzLCByZ2Jjb2xvciA9ICcwIDEgMCcsIHJnYmNvbG9yMiA9ICcwLjggMCAwJywgc2Nyb2xsc3BlZWQgPSA1LCBzb3VuZGhpdGRyeSA9ICdmbGFtaGl0MScsIHNvdW5kaGl0d2V0ID0gJ3NpenpsZScsIHNvdW5kc3RhcnQgPSAnaGVhdHJheTNidXJuJywgc291bmRzdGFydHZvbHVtZSA9IDYsIHNvdW5kdHJpZ2dlciA9IDEsIHRoaWNrbmVzcyA9IDIuNSwgdHVycmV0ID0gdHJ1ZSwgd2VhcG9udHlwZSA9ICdCZWFtTGFzZXInLCB3ZWFwb252ZWxvY2l0eSA9IDE1MDAsIGRhbWFnZSA9IHsgZGVmYXVsdCA9IDE4NSB9IH0gfSwgd2VhcG9ucyA9IHsgWzFdID0geyBkZWYgPSAnQ09SQ09NTEFTRVInLCBvbmx5dGFyZ2V0Y2F0ZWdvcnkgPSAnTk9UU1VCJywgZmFzdGF1dG9yZXRhcmdldGluZyA9IHRydWUgfSwgWzNdID0geyBiYWR0YXJnZXRjYXRlZ29yeSA9ICdWVE9MJywgZGVmID0gJ2Rpc2ludGVncmF0b3J4bCcsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICdTVVJGQUNFJyB9LCBbNl0gPSB7IGRlZiA9ICcnIH0sIFs1XSA9IHsgYmFkdGFyZ2V0Y2F0ZWdvcnkgPSAnVlRPTCBHUk9VTkRTQ09VVCcsIGRlZiA9ICdjb3Jjb21leWVsYXNlcicsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICdTVVJGQUNFJyB9IH0gfSB9
Experimental Wave Challenge	!bset tweakunits5 LS1OdXR0eUIgRXhwZXJpbWVudGFsIFdhdmUgQ2hhbGxlbmdlCi0tIEF1dGhvcnM6IEJhY2tCYXNoCi0tIGRvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xUVNWc3VBQU1oQnJoaVpkVGloVmZTQ3dQemJiWldETEN0WFdQMjNDVTBrbwpyZXR1cm4geyByYXB0b3JfYWlyX3Njb3V0X2Jhc2ljX3QyX3YxID0geyBjdXN0b21wYXJhbXMgPSB7IHJhcHRvcmN1c3RvbXNxdWFkID0gdHJ1ZSwgcmFwdG9yc3F1YWR1bml0c2Ftb3VudCA9IDI1LCByYXB0b3JzcXVhZG1pbmFuZ2VyID0gMjAsIHJhcHRvcnNxdWFkbWF4YW5nZXIgPSAyNiwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAxMCwgcmFwdG9yc3F1YWRyYXJpdHkgPSAiYmFzaWMiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gInJhaWRlciIsIHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZSA9IDUwMCwgcmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZSA9IDAuNzUsIH0sIH0sIHJhcHRvcl9oaXZlX2Fzc2F1bHRfYmFzaWMgPSB7IGN1c3RvbXBhcmFtcyA9IHsgcmFwdG9yY3VzdG9tc3F1YWQgPSB0cnVlLCByYXB0b3JzcXVhZHVuaXRzYW1vdW50ID0gMjUsIHJhcHRvcnNxdWFkbWluYW5nZXIgPSAwLCByYXB0b3JzcXVhZG1heGFuZ2VyID0gNDAsIHJhcHRvcnNxdWFkd2VpZ2h0ID0gMSwgcmFwdG9yc3F1YWRyYXJpdHkgPSAiYmFzaWMiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gInJhaWRlciIsIHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZSA9IDUwMCwgcmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZSA9IDAuNzUsIH0sIH0sIHJhcHRvcl9sYW5kX3N3YXJtZXJfYmFzaWNfdDNfdjEgPSB7IGN1c3RvbXBhcmFtcyA9IHsgcmFwdG9yY3VzdG9tc3F1YWQgPSB0cnVlLCByYXB0b3JzcXVhZHVuaXRzYW1vdW50ID0gMjUsIHJhcHRvcnNxdWFkbWluYW5nZXIgPSAwLCByYXB0b3JzcXVhZG1heGFuZ2VyID0gNDAsIHJhcHRvcnNxdWFkd2VpZ2h0ID0gMiwgcmFwdG9yc3F1YWRyYXJpdHkgPSAiYmFzaWMiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gInJhaWRlciIsIHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZSA9IDUwMCwgcmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZSA9IDAuNzUsIH0sIH0sIHJhcHRvcl9ldm9sdmVkX21vdG9ydDQgPSB7IGN1c3RvbXBhcmFtcyA9IHsgcmFwdG9yY3VzdG9tc3F1YWQgPSB0cnVlLCByYXB0b3JzcXVhZHVuaXRzYW1vdW50ID0gMTIsIHJhcHRvcnNxdWFkbWluYW5nZXIgPSA1MCwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDMwMCwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAzLCByYXB0b3JzcXVhZHJhcml0eSA9ICJzcGVjaWFsIiwgcmFwdG9yc3F1YWRiZWhhdmlvciA9ICJhcnRpbGxlcnkiLCByYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2UgPSAyNTAwLCByYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlID0gMC43NSwgfSwgfSwgcmFwdG9yX2hpdmVfYXNzYXVsdF9oZWF2eSA9IHsgY3VzdG9tcGFyYW1zID0geyByYXB0b3JjdXN0b21zcXVhZCA9IHRydWUsIHJhcHRvcnNxdWFkdW5pdHNhbW91bnQgPSAyNSwgcmFwdG9yc3F1YWRtaW5hbmdlciA9IDU1LCByYXB0b3JzcXVhZG1heGFuZ2VyID0gNzAsIHJhcHRvcnNxdWFkd2VpZ2h0ID0gMSwgcmFwdG9yc3F1YWRyYXJpdHkgPSAiYmFzaWMiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gImJlcnNlcmsiLCByYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2UgPSA1MDAsIHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2UgPSAwLjc1LCB9LCB9LCByYXB0b3JfaGl2ZV9hc3NhdWx0X3N1cGVyaGVhdnkgPSB7IGN1c3RvbXBhcmFtcyA9IHsgcmFwdG9yY3VzdG9tc3F1YWQgPSB0cnVlLCByYXB0b3JzcXVhZHVuaXRzYW1vdW50ID0gMjUsIHJhcHRvcnNxdWFkbWluYW5nZXIgPSA4MCwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDg1LCByYXB0b3JzcXVhZHdlaWdodCA9IDEsIHJhcHRvcnNxdWFkcmFyaXR5ID0gImJhc2ljIiwgcmFwdG9yc3F1YWRiZWhhdmlvciA9ICJiZXJzZXJrIiwgcmFwdG9yc3F1YWRiZWhhdmlvcmRpc3RhbmNlID0gNTAwLCByYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlID0gMC43NSwgfSwgfSwgcmFwdG9yX2Fpcl9rYW1pa2F6ZV9iYXNpY190Ml92MSA9IHsgY3VzdG9tcGFyYW1zID0geyByYXB0b3JjdXN0b21zcXVhZCA9IHRydWUsIHJhcHRvcnNxdWFkdW5pdHNhbW91bnQgPSA1NSwgcmFwdG9yc3F1YWRtaW5hbmdlciA9IDEwMCwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDEwNSwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAyLCByYXB0b3JzcXVhZHJhcml0eSA9ICJiYXNpYyIsIHJhcHRvcnNxdWFkYmVoYXZpb3IgPSAiYmVyc2VyayIsIHJhcHRvcnNxdWFkYmVoYXZpb3JkaXN0YW5jZSA9IDUwMCwgcmFwdG9yc3F1YWRiZWhhdmlvcmNoYW5jZSA9IDAuNzUsIH0sIH0sIHJhcHRvcl9tYXRyaWFyY2hfZmlyZSA9IHsgY3VzdG9tcGFyYW1zID0geyByYXB0b3JjdXN0b21zcXVhZCA9IHRydWUsIHJhcHRvcnNxdWFkdW5pdHNhbW91bnQgPSAzMCwgcmFwdG9yc3F1YWRtaW5hbmdlciA9IDEwNSwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDEzNSwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAzLCByYXB0b3JzcXVhZHJhcml0eSA9ICJzcGVjaWFsIiwgcmFwdG9yc3F1YWRiZWhhdmlvciA9ICJiZXJzZXJrIiwgcmFwdG9yc3F1YWRiZWhhdmlvcmRpc3RhbmNlID0gNTAwLCByYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlID0gMC43NSwgfSwgfSwgcmFwdG9yX21hdHJpYXJjaF9iYXNpYyA9IHsgY3VzdG9tcGFyYW1zID0geyByYXB0b3JjdXN0b21zcXVhZCA9IHRydWUsIHJhcHRvcnNxdWFkdW5pdHNhbW91bnQgPSAzMCwgcmFwdG9yc3F1YWRtaW5hbmdlciA9IDEwNSwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDEzNSwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAzLCByYXB0b3JzcXVhZHJhcml0eSA9ICJzcGVjaWFsIiwgcmFwdG9yc3F1YWRiZWhhdmlvciA9ICJiZXJzZXJrIiwgcmFwdG9yc3F1YWRiZWhhdmlvcmRpc3RhbmNlID0gNTAwLCByYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlID0gMC43NSwgfSwgfSwgcmFwdG9yX21hdHJpYXJjaF9hY2lkID0geyBjdXN0b21wYXJhbXMgPSB7IHJhcHRvcmN1c3RvbXNxdWFkID0gdHJ1ZSwgcmFwdG9yc3F1YWR1bml0c2Ftb3VudCA9IDMwLCByYXB0b3JzcXVhZG1pbmFuZ2VyID0gMTA1LCByYXB0b3JzcXVhZG1heGFuZ2VyID0gMTM1LCByYXB0b3JzcXVhZHdlaWdodCA9IDMsIHJhcHRvcnNxdWFkcmFyaXR5ID0gInNwZWNpYWwiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gImJlcnNlcmsiLCByYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2UgPSA1MDAsIHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2UgPSAwLjc1LCB9LCB9LCByYXB0b3JfbWF0cmlhcmNoX2VsZWN0cmljID0geyBjdXN0b21wYXJhbXMgPSB7IHJhcHRvcmN1c3RvbXNxdWFkID0gdHJ1ZSwgcmFwdG9yc3F1YWR1bml0c2Ftb3VudCA9IDMwLCByYXB0b3JzcXVhZG1pbmFuZ2VyID0gMTA1LCByYXB0b3JzcXVhZG1heGFuZ2VyID0gMTM1LCByYXB0b3JzcXVhZHdlaWdodCA9IDMsIHJhcHRvcnNxdWFkcmFyaXR5ID0gInNwZWNpYWwiLCByYXB0b3JzcXVhZGJlaGF2aW9yID0gImJlcnNlcmsiLCByYXB0b3JzcXVhZGJlaGF2aW9yZGlzdGFuY2UgPSA1MDAsIHJhcHRvcnNxdWFkYmVoYXZpb3JjaGFuY2UgPSAwLjc1LCB9LCB3ZWFwb25zID0geyBbNV0gPSB7IGRlZiA9ICIiLCB9LCB9LCB9LCByYXB0b3JfcXVlZW5fdmVyeWVhc3kgPSB7IHNlbGZkZXN0cnVjdGFzID0gImN1c3RvbWZ1c2lvbmV4cGxvIiwgZXhwbG9kZWFzID0gImN1c3RvbWZ1c2lvbmV4cGxvIiwgbWF4dGhpc3VuaXQgPSAzLCBjdXN0b21wYXJhbXMgPSB7IHJhcHRvcmN1c3RvbXNxdWFkID0gdHJ1ZSwgaTE4bl9lbl9odW1hbm5hbWUgPSAiUXVlZW4gRGVnZW5lcmF0aXZlIiwgaTE4bl9lbl90b29sdGlwID0gIlNIRVMgQSBCSUcgT05FIiwgcmFwdG9yc3F1YWR1bml0c2Ftb3VudCA9IDIsIHJhcHRvcnNxdWFkbWluYW5nZXIgPSA3MCwgcmFwdG9yc3F1YWRtYXhhbmdlciA9IDE1MCwgcmFwdG9yc3F1YWR3ZWlnaHQgPSAyLCByYXB0b3JzcXVhZHJhcml0eSA9ICJzcGVjaWFsIiwgcmFwdG9yc3F1YWRiZWhhdmlvciA9ICJiZXJzZXJrIiwgcmFwdG9yc3F1YWRiZWhhdmlvcmRpc3RhbmNlID0gNTAwLCByYXB0b3JzcXVhZGJlaGF2aW9yY2hhbmNlID0gMC43NSwgfSwgd2VhcG9uZGVmcyA9IHsgbWVsZWUgPSB7IGRhbWFnZSA9IHsgZGVmYXVsdCA9IDUwMDAsIH0sIH0sIHllbGxvd19taXNzaWxlID0geyBkYW1hZ2UgPSB7IGRlZmF1bHQgPSAxLCB2dG9sID0gNTAwLCB9LCB9LCBnb28gPSB7IHJhbmdlID0gNTAwLCBkYW1hZ2UgPSB7IGRlZmF1bHQgPSAxMjAwLCB9LCB9LCB9LCB9LCBjb3Jjb21sdmw0ID0geyB3ZWFwb25kZWZzID0geyBkaXNpbnRlZ3JhdG9yeGwgPSB7IGRhbWFnZSA9IHsgY29tbWFuZGVycyA9IDAsIGRlZmF1bHQgPSA5OTk5OSwgc2NhdmJvc3MgPSAxMDAwLCByYXB0b3JxdWVlbiA9IDUwMDAsIH0sIH0sIH0sIH0gfQ
LRPC Rebalance v2	!bset tweakunits6 LS1OdXR0eUIgbHJwYyByZWJhbGFuY2UgdjIKLS0gZG9jcy5nb29nbGUuY29tL3NwcmVhZHNoZWV0cy9kLzFRU1ZzdUFBTWhCcmhpWmRUaWhWZlNDd1B6YmJaV0RMQ3RYV1AyM0NVMGtvCnJldHVybiB7IGFybWJydGhhID0geyBoZWFsdGggPSAxMzAwMCwgd2VhcG9uZGVmcyA9IHsgQVJNQlJUSEFfTUFJTiA9IHsgZGFtYWdlID0geyBjb21tYW5kZXJzID0gNDgwLCBkZWZhdWx0ID0gMzMwMDAgfSwgYXJlYW9mZWZmZWN0ID0gNjAsIGVuZXJneXBlcnNob3QgPSA3MDAwLCByYW5nZSA9IDI0MDAsIHJlbG9hZHRpbWUgPSA4LjUsIHR1cm5yYXRlID0gMjAwMDAgfSB9IH0sIGNvcmludCA9IHsgaGVhbHRoID0gMTMwMDAsIG1ldGFsY29zdCA9IDY5MDAsIHdlYXBvbmRlZnMgPSB7IENPUklOVF9NQUlOID0geyBkYW1hZ2UgPSB7IGNvbW1hbmRlcnMgPSA0ODAsIGRlZmF1bHQgPSA4NTAwMCB9LCBhcmVhb2ZlZmZlY3QgPSAyNTAsIGVkZ2VlZmZlY3RpdmVuZXNzID0gMC43LCBlbmVyZ3lwZXJzaG90ID0gMTcwMDAsIHJhbmdlID0gMjgwMCwgcmVsb2FkdGltZSA9IDE2IH0gfSB9LCBsZWdscnBjID0geyBoZWFsdGggPSAxMzAwMCwgbWV0YWxjb3N0ID0gNjMwMCwgd2VhcG9uZGVmcyA9IHsgTEVHTFJQQ19NQUlOID0geyBkYW1hZ2UgPSB7IGNvbW1hbmRlcnMgPSA0ODAsIGRlZmF1bHQgPSA0NTAwIH0sIGVuZXJneXBlcnNob3QgPSAxNTAwLCByYW5nZSA9IDIyMDAsIHJlbG9hZHRpbWUgPSAyLCB0dXJucmF0ZSA9IDMwMDAwIH0gfSB9IH0
T4 Air Rework	!bset tweakunits7 LS1OdXR0eUIgVDQgQWlyIHJld29yawotLSBBdXRob3JzOiBCYWNrQmFzaAotLSBkb2NzLmdvb2dsZS5jb20vc3ByZWFkc2hlZXRzL2QvMVFTVnN1QUFNaEJyaGlaZFRpaFZmU0N3UHpiYlpXRExDdFhXUDIzQ1Uwa28KcmV0dXJuIHsgbGVnZm9ydHQ0ID0geyBjdXN0b21wYXJhbXMgPSB7IGkxOG5fZW5faHVtYW5uYW1lID0gJ0V4cGVyaW1lbnRhbCBUeXJhbm51cycsIGkxOG5fZW5fdG9vbHRpcCA9ICdJbiBkZWRpY2F0aW9uIHRvIG91ciBjb21tYW5kZXIgVHlyYW5udXMnIH0sIHdlYXBvbmRlZnMgPSB7IG1hY2hpbmVndW4gPSB7IGFjY3VyYWN5ID0gNDAwLCBhcmVhb2ZlZmZlY3QgPSA2NCwgYXZvaWRmcmllbmRseSA9IGZhbHNlLCBhdm9pZGZlYXR1cmUgPSBmYWxzZSwgY29sbGlkZWZyaWVuZGx5ID0gZmFsc2UsIGNvbGxpZGVmZWF0dXJlID0gdHJ1ZSwgYmVhbXRpbWUgPSAwLjA5LCBjb3JldGhpY2tuZXNzID0gMC41NSwgZHVyYXRpb24gPSAwLjA5LCBidXJzdCA9IDEsIGJ1cnN0cmF0ZSA9IDAuMSwgZXhwbG9zaW9uZ2VuZXJhdG9yID0gImN1c3RvbTpnZW5lcmljc2hlbGxleHBsb3Npb24tdGlueS1hYSIsIGVuZXJneXBlcnNob3QgPSAwLCBmYWxsb2ZmcmF0ZSA9IDAsIGZpcmVzdGFydGVyID0gNTAsIGludGVyY2VwdGVkYnlzaGllbGR0eXBlID0gNCwgaW50ZW5zaXR5ID0gMiwgbmFtZSA9ICJzY2F2IHJhcGlkIGZpcmUgcGxhc21hIGd1biIsIHJhbmdlID0gMTAwMCwgcmVsb2FkdGltZSA9IDAuMSwgd2VhcG9udHlwZSA9ICJMYXNlckNhbm5vbiIsIHJnYmNvbG9yID0gIjEgMCAwIiwgcmdiY29sb3IyID0gIjEgMSAxIiwgc291bmR0cmlnZ2VyID0gdHJ1ZSwgc291bmRzdGFydCA9ICJ0Z3Vuc2hpcGZpcmUiLCB0ZXh0dXJlMSA9ICJzaG90IiwgdGV4dHVyZTIgPSAiZXhwbG8yIiwgdGhpY2tuZXNzID0gOC41LCB0b2xlcmFuY2UgPSAxMDAwLCB0dXJyZXQgPSB0cnVlLCB3ZWFwb252ZWxvY2l0eSA9IDEwMDAsIGRhbWFnZSA9IHsgZGVmYXVsdCA9IDYwLCB9LCB9LCBoZWF0cmF5MSA9IHsgYWxsb3dOb25CbG9ja2luZ0FpbSA9IHRydWUsIGF2b2lkZnJpZW5kbHkgPSB0cnVlLCBhcmVhb2ZlZmZlY3QgPSA2NCwgYXZvaWRmZWF0dXJlID0gZmFsc2UsIGJlYW10aW1lID0gMC4wMzMsIGNhbWVyYXNoYWtlID0gMC4xLCBjb2xsaWRlZnJpZW5kbHkgPSBmYWxzZSwgY29yZXRoaWNrbmVzcyA9IDAuNDUsIGNyYXRlcmFyZWFvZmVmZmVjdCA9IDEyLCBjcmF0ZXJib29zdCA9IDAsIGNyYXRlcm11bHQgPSAwLCBlZGdlZWZmZWN0aXZlbmVzcyA9IDEsIGVuZXJneXBlcnNob3QgPSAwLCBleHBsb3Npb25nZW5lcmF0b3IgPSAiY3VzdG9tOmhlYXRyYXktbGFyZ2UiLCBmaXJlc3RhcnRlciA9IDkwLCBmaXJldG9sZXJhbmNlID0gMzAwLCBpbXB1bHNlZmFjdG9yID0gMCwgaW50ZW5zaXR5ID0gOSwgbGFzZXJmbGFyZXNpemUgPSA4LCBuYW1lID0gJ0V4cGVyaW1lbnRhbCBUaGVybWFsIE9yZG5hbmNlIEdlbmVyYXRvcnMnLCBub3NlbGZkYW1hZ2UgPSB0cnVlLCBwcm94aW1pdHlwcmlvcml0eSA9IC0xLCByYW5nZSA9IDg1MCwgcmVsb2FkdGltZSA9IDAuMDMzLCByZ2Jjb2xvciA9ICIxIDAuNTUgMCIsIHJnYmNvbG9yMiA9ICIwLjkgMS4wIDAuNSIsIHNjcm9sbHNwZWVkID0gNSwgc291bmRoaXRkcnkgPSAnaGVhdHJheTNzdGFydCcsIHNvdW5kaGl0d2V0ID0gJ3NpenpsZScsIHNvdW5kc3RhcnQgPSAnaGVhdHJheTNscCcsIHNvdW5kc3RhcnR2b2x1bWUgPSA2LCBzb3VuZHRyaWdnZXIgPSAxLCB0aGlja25lc3MgPSA2LCB0dXJyZXQgPSB0cnVlLCB3ZWFwb250eXBlID0gJ0JlYW1MYXNlcicsIHdlYXBvbnZlbG9jaXR5ID0gMTUwMCwgZGFtYWdlID0geyBkZWZhdWx0ID0gMTUwIH0gfSwgYXRhID0geyBhcmVhb2ZlZmZlY3QgPSAzNCwgYXZvaWRmZWF0dXJlID0gZmFsc2UsIGJlYW10aW1lID0gMiwgY29sbGlkZWZyaWVuZGx5ID0gZmFsc2UsIGNvcmV0aGlja25lc3MgPSAwLjUsIGNyYXRlcmFyZWFvZmVmZmVjdCA9IDAsIGNyYXRlcmJvb3N0ID0gMCwgY3JhdGVybXVsdCA9IDAsIGVkZ2VlZmZlY3RpdmVuZXNzID0gMC4zMCwgZW5lcmd5cGVyc2hvdCA9IDcwMDAsIGV4cGxvc2lvbmdlbmVyYXRvciA9ICdjdXN0b206bGFzZXJoaXQtbGFyZ2UtYmx1ZScsIGZpcmVzdGFydGVyID0gOTAsIGltcHVsc2VmYWN0b3IgPSAwLCBsYXJnZWJlYW1sYXNlciA9IHRydWUsIGxhc2VyZmxhcmVzaXplID0gNywgbmFtZSA9ICdIZWF2eSBsb25nLXJhbmdlIGcyZyB0YWNoeW9uIGFjY2VsZXJhdG9yIGJlYW0nLCBub3NlbGZkYW1hZ2UgPSB0cnVlLCByYW5nZSA9IDEzMDAsIHJlbG9hZHRpbWUgPSAxNSwgcmdiY29sb3IgPSAnMCAxIDEnLCBzY3JvbGxzcGVlZCA9IDUsIHNvdW5kaGl0ZHJ5ID0gJycsIHNvdW5kaGl0d2V0ID0gJ3NpenpsZScsIHNvdW5kc3RhcnQgPSAncmFwdG9ybGFzZXInLCBzb3VuZHRyaWdnZXIgPSAxLCBzb3VuZHN0YXJ0dm9sdW1lID0gNCwgdGV4dHVyZTMgPSAnbGFyZ2ViZWFtJywgdGhpY2tuZXNzID0gMTAsIHRpbGVsZW5ndGggPSAxNTAsIHRvbGVyYW5jZSA9IDEwMDAwLCB0dXJyZXQgPSB0cnVlLCB3ZWFwb250eXBlID0gJ0JlYW1MYXNlcicsIHdlYXBvbnZlbG9jaXR5ID0gMzEwMCwgZGFtYWdlID0geyBjb21tYW5kZXJzID0gNDgwLCBkZWZhdWx0ID0gNDgwMDAgfSB9LCB9LCB3ZWFwb25zID0geyBbMV0gPSB7IGJhZHRhcmdldGNhdGVnb3J5ID0gIk5PVExBTkQiLCBkZWYgPSAiaGVhdHJheTEiLCBtYWluZGlyID0gIi0xIDAgMCIsIG1heGFuZ2xlZGlmID0gMjEwLCBvbmx5dGFyZ2V0Y2F0ZWdvcnkgPSAiU1VSRkFDRSIsIH0sIFsyXSA9IHsgYmFkdGFyZ2V0Y2F0ZWdvcnkgPSAiTk9UTEFORCIsIGRlZiA9ICJoZWF0cmF5MSIsIG1haW5kaXIgPSAiMSAwIDAiLCBtYXhhbmdsZWRpZiA9IDIxMCwgb25seXRhcmdldGNhdGVnb3J5ID0gIlNVUkZBQ0UiLCB9LCBbM10gPSB7IGRlZiA9ICJhdGEiLCBtYWluZGlyID0gIjEgMCAwIiwgbWF4YW5nbGVkaWYgPSAxOTAsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICJTVVJGQUNFIiwgfSwgWzRdID0geyBkZWYgPSAibWFjaGluZWd1biIsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICJTVVJGQUNFIiwgfSwgWzVdID0geyBkZWYgPSAibWFjaGluZWd1biIsIG9ubHl0YXJnZXRjYXRlZ29yeSA9ICJTVVJGQUNFIiwgfSwgfSwgfSwgfQ
Mega Nuke	!bset tweakunits4 LS1OdXR0eUIgdjEuNTIgTWVnYSBOdWtlCi0tIGRvY3MuZ29vZ2xlLmNvbS9zcHJlYWRzaGVldHMvZC8xUVNWc3VBQU1oQnJoaVpkVGloVmZTQ3dQemJiWldETEN0WFdQMjNDVTBrbwpyZXR1cm4geyBhcm1zaWxvID0geyBlbmVyZ3ljb3N0ID0gMTUwMDAwMCwgbWV0YWxjb3N0ID0gOTg3MjAsIGJ1aWxkdGltZSA9IDIyODUwMCwgZm9vdHByaW50eCA9IDEyLCBmb290cHJpbnR6ID0gMTIsIG1heHRoaXN1bml0ID0gMSwgZXhwbG9kZWFzID0gJ2FkdmFuY2VkRnVzaW9uRXhwbG9zaW9uJywgd2VhcG9uZGVmcyA9IHsgbnVjbGVhcl9taXNzaWxlID0geyBhcmVhb2ZlZmZlY3QgPSA1MDAwLCBjYW1lcmFTaGFrZSA9IDE1MDAwLCBjcmF0ZXJib29zdCA9IDU1LCBjcmF0ZXJtdWx0ID0gNDAsIGVuZXJneXBlcnNob3QgPSAzOTAwMDAsIG1ldGFscGVyc2hvdCA9IDMwMDAsIHNtb2tlc2l6ZSA9IDI4LCBzbW9rZWNvbG9yID0gMC44NSwgc291bmRoaXR3ZXR2b2x1bWUgPSA4MCwgc291bmRzdGFydHZvbHVtZSA9IDUwLCBzdG9ja3BpbGV0aW1lID0gMTYwLCB3ZWFwb252ZWxvY2l0eSA9IDUwMCwgZGFtYWdlID0geyBjb21tYW5kZXJzID0gNTAwLCBkZWZhdWx0ID0gMTk1MDAsIHJhcHRvciA9IDEwMDAwMCB9IH0gfSB9LCBjb3JzaWxvID0geyBlbmVyZ3ljb3N0ID0gMTUwMDAwMCwgbWV0YWxjb3N0ID0gOTg3MjAsIGJ1aWxkdGltZSA9IDIyODUwMCwgZm9vdHByaW50eCA9IDEyLCBmb290cHJpbnR6ID0gMTIsIG1heHRoaXN1bml0ID0gMSwgZXhwbG9kZWFzID0gJ2FkdmFuY2VkRnVzaW9uRXhwbG9zaW9uJywgd2VhcG9uZGVmcyA9IHsgbnVjbGVhcl9taXNzaWxlID0geyBhcmVhb2ZlZmZlY3QgPSA1MDAwLCBjYW1lcmFTaGFrZSA9IDE1MDAwLCBjcmF0ZXJib29zdCA9IDU1LCBjcmF0ZXJtdWx0ID0gNDAsIGVuZXJneXBlcnNob3QgPSAzOTAwMDAsIG1ldGFscGVyc2hvdCA9IDMwMDAsIHNtb2tlc2l6ZSA9IDI4LCBzbW9rZWNvbG9yID0gMC44NSwgc291bmRoaXR3ZXR2b2x1bWUgPSA4MCwgc291bmRzdGFydHZvbHVtZSA9IDUwLCBzdG9ja3BpbGV0aW1lID0gMTYwLCB3ZWFwb252ZWxvY2l0eSA9IDUwMCwgZGFtYWdlID0geyBjb21tYW5kZXJzID0gNTAwLCBkZWZhdWx0ID0gMTk1MDAsIHJhcHRvciA9IDEwMDAwMCB9IH0gfSB9LCBsZWdzaWxvID0geyBlbmVyZ3ljb3N0ID0gMTUwMDAwMCwgbWV0YWxjb3N0ID0gOTg3MjAsIGJ1aWxkdGltZSA9IDIyODUwMCwgZm9vdHByaW50eCA9IDEyLCBmb290cHJpbnR6ID0gMTIsIG1heHRoaXN1bml0ID0gMSwgZXhwbG9kZWFzID0gJ2FkdmFuY2VkRnVzaW9uRXhwbG9zaW9uJywgd2VhcG9uZGVmcyA9IHsgbnVjbGVhcl9taXNzaWxlID0geyBhcmVhb2ZlZmZlY3QgPSA1MDAwLCBjYW1lcmFTaGFrZSA9IDE1MDAwLCBjcmF0ZXJib29zdCA9IDU1LCBjcmF0ZXJtdWx0ID0gNDAsIGVuZXJneXBlcnNob3QgPSAzOTAwMDAsIG1ldGFscGVyc2hvdCA9IDMwMDAsIHNtb2tlc2l6ZSA9IDI4LCBzbW9rZWNvbG9yID0gMC44NSwgc291bmRoaXR3ZXR2b2x1bWUgPSA4MCwgc291bmRzdGFydHZvbHVtZSA9IDUwLCBzdG9ja3BpbGV0aW1lID0gMTYwLCB3ZWFwb252ZWxvY2l0eSA9IDUwMCwgZGFtYWdlID0geyBjb21tYW5kZXJzID0gNTAwLCBkZWZhdWx0ID0gMTk1MDAsIHJhcHRvciA9IDEwMDAwMCB9IH0gfSB9LCByYXB0b3JfdHVycmV0X2FudGludWtlX3QzX3YxID0geyBtYXh0aGlzdW5pdCA9IDAgfSwgcmFwdG9yX2FudGludWtlID0geyBtYXh0aGlzdW5pdCA9IDAgfSwgcmFwdG9yX3R1cnJldF9hbnRpbnVrZV90NF92MSA9IHsgbWF4dGhpc3VuaXQgPSAwIH0sIHJhcHRvcl90dXJyZXRfYW50aW51a2VfdDJfdjEgPSB7IG1heHRoaXN1bml0ID0gMCB9IH0
